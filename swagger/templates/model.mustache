// <copyright file="{{classname}}.Generated.cs" company="Okta, Inc">
// Copyright (c) 2014 - present Okta, Inc. All rights reserved.
// Licensed under the Apache 2.0 license. See the LICENSE file in the project root for full license information.
// </copyright>

// This file was automatically generated. Don't modify it directly.

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;
using Okta.Sdk.Internal;


{{#models}}
{{#model}}
namespace Okta.Sdk {
  {{! Pure Classes }}
  {{^isEnum}}
  {{! check for x-okta-send-null-value to include [ResourceObject(NullValueHandling = ResourceNullValueHandling.Include)] }}
  /// <summary>
  /// {{description}}
  /// </summary>
  public {{^parent}}sealed{{/parent}} partial class {{classname}}{{#parent}} : {{{parent}}},{{/parent}} {{^parent}}: Resource, {{/parent}} I{{classname}} {
    {{#vars}}
    /// <summary>
    /// {{^description}}Gets or Sets {{{name}}}{{/description}}{{#description}}{{{description}}}{{/description}}
    /// </summary>{{#description}}
    /// <value>{{{description}}}</value>{{/description}}
    public {{#vendorExtensions.x-okta-hide-base-member}}new {{/vendorExtensions.x-okta-hide-base-member}}{{{datatype}}} {{name}}
    {
      {{#vendorExtensions.getterLiteral}}
       get => {{{vendorExtensions.getterLiteral}}};
       {{/vendorExtensions.getterLiteral}}
      {{^isReadOnly}}
       set => this["{{baseName}}"] = value;
      {{/isReadOnly}}
    }  

    {{/vars}}
  }
  {{/isEnum}}
  {{! Enums }}
  {{#isEnum}}
    /// <summary>
    /// An enumeration of {{classname}} values in the Okta API.
    /// </summary>
    public sealed class {{classname}} : StringEnum
    {
        {{#allowableValues}}
        {{#enumVars}}
        /// <summary>
        /// Enum {{name}} for {{#value}}{{{value}}}{{/value}}{{^value}}null{{/value}}
        /// </summary>
        public static {{classname}} {{enumMemberName}} = new {{enumMemberName}}("{{value}}");
        {{/enumVars}}
        {{/allowableValues}}
        /// <summary>
        /// Implicit operator declaration to accept and convert a string value as a <see cref="{{memberName}}"/>
        /// </summary>
        /// <param name="value">The value to use</param>
        public static implicit operator {{classname}}(string value) => new {{classname}}(value);

        /// <summary>
        /// Creates a new <see cref="{{classname}}"/> instance.
        /// </summary>
        /// <param name="value">The value to use.</param>
        public {{classname}}(string value)
            : base(value)
        {
        }
      }
  {{/isEnum}}
  {{/model}}
  {{/models}}
}
